head(KO_cold.dge.annot[order(abs(KO_cold.dge.annot$cohensD)),])
head(KO_cold.dge.annot[order(abs(KO_cold.dge.annot$cohensD), decreasing = T),])
head(KO_cold.dge.annot[order(abs(KO_cold.dge.annot$cohensD), decreasing = T),], n = 25L)
2^1
head(KO_cold.dge.annot[order(abs(KO_cold.dge.annot$cohensD), decreasing = T),], n = 50L)
View(joinedDGE.counts)
View(KO_coldvsKO_rt.dge.annot)
?eBayes
devtools::install_github("rmcelreath/rethinking",ref="Experimental")
plot(KO_cold.dge.annot$cohensD, -log10(KO_cold.dge.annot$adj.P.Val))
-log10(0.001)
-log10(0.05)
plot(KO_cold.dge.annot$cohensD, -log10(KO_cold.dge.annot$adj.P.Val))
plot(KO_cold.dge.annot$cohensD, -log10(KO_cold.dge.annot$adj.P.Val) < 0.05, col = "red")
plot(KO_cold.dge.annot$cohensD, -log10(KO_cold.dge.annot$adj.P.Val))
abline(v = c(-1,1))
plot(KO_rt.dge.annot$cohensD, -log10(KO_rt.dge.annot$adj.P.Val))
abline(v = c(-1,1))
KO_cold.cd <- data.frame(cohensD = KO_cold.dge.annot$cohensD,
FDR = KO_cold.dge.annot$adj.P.Val,
ens_gene = KO_cold.dge.annot$ens_gene)
KO_rt.cd <- data.frame(cohensD = KO_rt.dge.annot$cohensD,
FDR = KO_rt.dge.annot$adj.P.Val,
ens_gene = KO_rt.dge.annot$ens_gene)
KO_cold.cd <- data.frame(cohensD = KO_cold.dge.annot$cohensD,
FDR = KO_cold.dge.annot$adj.P.Val,
ens_gene = KO_cold.dge.annot$ens_gene,
condition = "KO_cold")
KO_rt.cd <- data.frame(cohensD = KO_rt.dge.annot$cohensD,
FDR = KO_rt.dge.annot$adj.P.Val,
ens_gene = KO_rt.dge.annot$ens_gene,
condition = "KO_RT")
alldata <- rbind(KO_cold.cd, KO_rt.cd)
alldata <- melt(alldata, id.vars = c("condition", "ens_gene"))
View(alldata)
alldata <- melt(alldata, id.vars = c("condition", "ens_gene", "cohensD"))
alldata <- rbind(KO_cold.cd, KO_rt.cd)
alldata <- melt(alldata, id.vars = c("condition", "ens_gene", "cohensD"))
View(alldata)
alldata <- rbind(KO_cold.cd, KO_rt.cd)
KO_cold.cd <- data.frame(cohensD = KO_cold.dge.annot$cohensD,
FDR = KO_cold.dge.annot$adj.P.Val,
ens_gene = KO_cold.dge.annot$ens_gene,
condition = "KO_cold",
significant = ifelse(KO_cold.dge.annot$adj.P.Val < 0.05,
"red",
"darkgray"))
ggplot(KO_cold.cd, aes(x = cohensD, y = -log10(FDR), color = significant)) +
geom_point()
KO_cold.cd <- data.frame(cohensD = KO_cold.dge.annot$cohensD,
FDR = KO_cold.dge.annot$adj.P.Val,
ens_gene = KO_cold.dge.annot$ens_gene,
condition = "KO_cold",
significant = ifelse(KO_cold.dge.annot$adj.P.Val < 0.05 &
abs(KO_cold.dge.annot$cohensD) > 1,
"red",
"darkgray"))
ggplot(KO_cold.cd, aes(x = cohensD, y = -log10(FDR), color = significant)) +
geom_point()
ggplot(KO_cold.cd, aes(x = cohensD, y = -log10(FDR), color = significant)) +
geom_point() +
geom_vline(xintercept = c(-1,1))
ggplot(KO_cold.cd, aes(x = cohensD, y = -log10(FDR), color = significant)) +
geom_point() +
geom_vline(xintercept = c(-1,1))
ggplot(KO_cold.cd, aes(x = cohensD, y = -log10(FDR), color = significant)) +
geom_point() +
geom_vline(xintercept = c(-1,1)) +
scale_color_brewer("Dark2")
ggplot(KO_cold.cd, aes(x = cohensD, y = -log10(FDR), color = significant)) +
geom_point() +
geom_vline(xintercept = c(-1,1)) +
scale_color_brewer("Paired")
ggplot(KO_cold.cd, aes(x = cohensD, y = -log10(FDR), color = significant)) +
geom_point() +
geom_vline(xintercept = c(-1,1), linetype = "dashed") +
scale_color_brewer(palette = "Paired")
ggplot(KO_cold.cd, aes(x = cohensD, y = -log10(FDR), color = significant)) +
geom_point() +
geom_vline(xintercept = c(-1,1), linetype = "dashed") +
scale_color_brewer(palette = "Paired") +
xlab("Effect size (Cohen's D)") +
ylab("q-value (-log10(FDR))") +
guides(fill = FALSE) +
theme_bw()
ggplot(KO_cold.cd, aes(x = cohensD, y = -log10(FDR), color = significant)) +
geom_point() +
geom_vline(xintercept = c(-1,1), linetype = "dashed") +
scale_color_brewer(palette = "Paired") +
xlab("Effect size (Cohen's D)") +
ylab("q-value (-log10[FDR])") +
guides(fill = FALSE) +
theme_bw()
ggplot(KO_cold.cd, aes(x = cohensD, y = -log10(FDR), color = significant)) +
geom_point() +
geom_vline(xintercept = c(-1,1), linetype = "dashed") +
scale_color_brewer(palette = "Paired") +
xlab("Effect size (Cohen's D)") +
ylab("-log10 q-value") +
guides(fill = FALSE) +
theme_bw()
ggplot(KO_cold.cd, aes(x = cohensD, y = -log10(FDR), color = significant)) +
geom_point() +
geom_vline(xintercept = c(-1,1), linetype = "dashed") +
scale_color_brewer(palette = "Paired") +
xlab("Effect size (Cohen's D)") +
ylab("-log(FDR)") +
guides(fill = FALSE) +
theme_bw()
ggplot(KO_cold.cd, aes(x = cohensD, y = -log10(FDR), color = significant)) +
geom_point() +
geom_vline(xintercept = c(-1,1), linetype = "dashed") +
scale_color_brewer(palette = "Paired") +
xlab("Effect size (Cohen's D)") +
ylab("-log(FDR)") +
guides(color = FALSE) +
theme_bw()
KO_cold.cd <- data.frame(cohensD = KO_cold.dge.annot$cohensD,
FDR = KO_cold.dge.annot$adj.P.Val,
ens_gene = KO_cold.dge.annot$ens_gene,
condition = "KO_cold",
significant = ifelse(KO_cold.dge.annot$adj.P.Val < 0.05 &
abs(KO_cold.dge.annot$cohensD) > 1,
"red",
"darkgray"),
gene_name = KO_cold.dge.annot$ext_gene)
KO_cold.cd.top10 <- KO_cold.cd[KO_cold.dge.annot$adj.P.Val < 0.05 &
abs(KO_cold.dge.annot$cohensD) > 1,]
KO_cold.cd.top10 <- KO_cold.cd.top10[order(abs(KO_cold.cd.top10$cohensD), decreasing = T),][1:10,]
View(KO_cold.cd.top10)
KO_cold.cd.top10 <- KO_cold.cd[KO_cold.dge.annot$adj.P.Val < 0.05 &
abs(KO_cold.dge.annot$cohensD) > 1,]
KO_cold.cd.top10 <- KO_cold.cd.top10[order(abs(KO_cold.cd.top10$cohensD), decreasing = T),][1:20,]
ggplot(KO_cold.cd, aes(x = cohensD, y = -log10(FDR), color = significant, label = gene_name)) +
geom_point() +
geom_vline(xintercept = c(-1,1), linetype = "dashed") +
geom_text_repel(data = KO_cold.cd.top10) +
scale_color_brewer(palette = "Paired") +
xlab("Effect size (Cohen's D)") +
ylab("-log(FDR)") +
guides(color = FALSE) +
theme_bw()
ggplot(KO_cold.cd, aes(x = cohensD, y = -log10(FDR), color = significant, label = gene_name)) +
geom_point() +
geom_vline(xintercept = c(-1,1), linetype = "dashed") +
geom_text_repel(data = KO_cold.cd.top10) +
scale_color_brewer(palette = "Paired") +
xlab("Effect size (Cohen's D)") +
ylab("-log(FDR)") +
guides(color = FALSE) +
ggtitle("KO vs WT 4C") +
theme_bw() +
theme(
plot.title = element_text(hjust = 0.5)
)
KO_cold.cd.top10 <- KO_cold.cd[KO_cold.dge.annot$adj.P.Val < 0.05 &
abs(KO_cold.dge.annot$cohensD) > 1,]
KO_cold.cd.top10 <- KO_cold.cd.top10[order(abs(KO_cold.cd.top10$cohensD), decreasing = T),][1:50,]
ggplot(KO_cold.cd, aes(x = cohensD, y = -log10(FDR), color = significant, label = gene_name)) +
geom_point() +
geom_vline(xintercept = c(-1,1), linetype = "dashed") +
geom_text_repel(data = KO_cold.cd.top10) +
scale_color_brewer(palette = "Paired") +
xlab("Effect size (Cohen's D)") +
ylab("-log(FDR)") +
guides(color = FALSE) +
ggtitle("KO vs WT 4C") +
theme_bw() +
theme(
plot.title = element_text(hjust = 0.5)
)
KO_cold.cd.top20 <- KO_cold.cd[KO_cold.dge.annot$adj.P.Val < 0.05 &
abs(KO_cold.dge.annot$cohensD) > 1,]
KO_cold.cd.top20 <- KO_cold.cd.top20[order(abs(KO_cold.cd.top20$cohensD), decreasing = T),][1:20,]
ggplot(KO_cold.cd, aes(x = cohensD, y = -log10(FDR), color = significant, label = gene_name)) +
geom_point() +
geom_vline(xintercept = c(-1,1), linetype = "dashed") +
geom_text_repel(data = KO_cold.cd.top20) +
scale_color_brewer(palette = "Paired") +
xlab("Effect size (Cohen's D)") +
ylab("-log(FDR)") +
guides(color = FALSE) +
ggtitle("KO vs WT 4C") +
theme_bw() +
theme(
plot.title = element_text(hjust = 0.5)
)
ggplot(KO_cold.cd, aes(x = cohensD, y = -log10(FDR), color = significant, label = gene_name)) +
geom_point() +
geom_vline(xintercept = c(-1,1), linetype = "dashed") +
geom_text_repel(data = KO_cold.cd.top20) +
scale_color_brewer(palette = "Paired") +
xlab("Effect size (Cohen's D)") +
ylab("-log(FDR)") +
guides(color = FALSE) +
ggtitle("KO vs WT 4C") +
theme_bw() +
theme(
plot.title = element_text(hjust = 0.5)
)
ggplot(KO_cold.cd, aes(x = cohensD, y = -log10(FDR), color = significant, label = gene_name)) +
geom_point() +
geom_vline(xintercept = c(-1,1), linetype = "dashed") +
geom_text_repel(data = KO_cold.cd.top20) +
scale_color_brewer(palette = "Paired") +
xlab("Effect size (Cohen's D)") +
ylab("-log(FDR)") +
guides(color = FALSE) +
#ggtitle("KO vs WT 4C") +
theme_bw() +
theme(
plot.title = element_text(hjust = 0.5)
)
ggplot(KO_cold.cd, aes(x = cohensD, y = -log10(FDR), color = significant, label = gene_name)) +
geom_point() +
geom_vline(xintercept = c(-1,1), linetype = "dashed") +
#geom_text_repel(data = KO_cold.cd.top20) +
scale_color_brewer(palette = "Paired") +
xlab("Effect size (Cohen's D)") +
ylab("-log(FDR)") +
guides(color = FALSE) +
#ggtitle("KO vs WT 4C") +
theme_bw() +
theme(
plot.title = element_text(hjust = 0.5)
)
ggplot(KO_cold.cd, aes(x = cohensD, y = -log10(FDR), color = significant, label = gene_name)) +
geom_point() +
geom_vline(xintercept = c(-1,1), linetype = "dashed") +
geom_text_repel(data = KO_cold.cd.top20) +
scale_color_brewer(palette = "Paired") +
xlab("Effect size (Cohen's D)") +
ylab("-log(FDR)") +
guides(color = FALSE) +
#ggtitle("KO vs WT 4C") +
theme_bw() +
theme(
plot.title = element_text(hjust = 0.5)
)
library(TxDb.Mmusculus.UCSC.mm10.ensGene)
txdb <- TxDb.Mmusculus.UCSC.mm10.ensGene
genes <- transcriptsBy(txdb, "gene")
head(as(y2, "RangedSummarizedExperiment"))
head(as(y2, "DGEList"))
head(as(y2, "DGElist"))
genes
?genes
proms <- promoters(txdb)
proms
head(y2$E)
x.dge <- as(x, "RangedSummarizedExperiment")
BiocManager::install("DEFormats")
library(DEFormats)
x.deseq <- as.DESeqDataSet(x)
x.rse <- as(x.deseq, "RangedSummarizedExperiment")
x.rse
rownames(x) <- gsub("\\..*$", "", rownames(x))
x.deseq <- as.DESeqDataSet(x)
x.rse <- as(x.deseq, "RangedSummarizedExperiment")
x.rse
KO_cold.DE.genes <- x.rse[rownames(x.rse) %in% KO_cold.dge.annot$ens_gene,]
KO_cold.DE.genes
rownames(x.rse)
head(KO_cold.dge.annot$ens_gene)
table(rownames(x.rse) %in% KO_cold.dge.annot$ens_gene)
KO_cold.DE.genes <- x.rse[rownames(x.rse) %in% subset(KO_cold.dge.annot, KO_cold.dge.annot$adj.P.Val < 0.05)$ens_gene,]
KO_cold.DE.genes
KO_cold_hits <- findOverlaps(KO_cold.DE.genes, genes)
KO_cold_hits.prom <- genes[subjectHits(KO_cold_hits)]
KO_cold_hits.prom <- promoters(KO_cold_hits.prom, upstream = 2000)
KO_cold_hits.prom
KO_cold_hits
genes <- genes(txdb)
genes
KO_cold_hits <- findOverlaps(KO_cold.DE.genes, genes)
KO_cold_hits
genes
findOverlaps(KO_cold.DE.genes, genes)
findOverlaps(granges(KO_cold.DE.genes), genes)
KO_cold_hits
KO_cold.DE.genes
granges(KO_cold.DE.genes)
x.rse
granges(x.rse)
x.deseq
granges(x.deseq)
genes
rownames(genes)
genes
names(genes)
KO_cold.DE.genes <- genes[names(genes) %in% subset(KO_cold.dge.annot, KO_cold.dge.annot$adj.P.Val < 0.05)$ens_gene,]
KO_cold.DE.genes
KO_cold_hits.prom <- promoters(KO_cold.DE.genes, upstream = 2000)
KO_cold_hits.prom
?rtracklayer::export
KO_rt.DE.genes <- genes[names(genes) %in% subset(KO_rt.dge.annot, KO_rt.dge.annot$adj.P.Val < 0.05)$ens_gene,]
KO_rt_hits.prom <- promoters(KO_rt.DE.genes, upstream = 2000)
KO_coldvsKO_rt.DE.genes <- genes[names(genes) %in% subset(KO_coldvsKO_rt.dge.annot, KO_coldvsKO_rt.dge.annot$adj.P.Val < 0.05)$ens_gene,]
KO_coldvsKO_rt_hits.prom <- promoters(KO_coldvsKO_rt.DE.genes, upstream = 2000)
WT_coldvsWT_rt.DE.genes <- genes[names(genes) %in% subset(WT_coldvsWT_rt.dge.annot, WT_coldvsWT_rt.dge.annot$adj.P.Val < 0.05)$ens_gene,]
WT_coldvsWT_rt_hits.prom <- promoters(WT_coldvsWT_rt.DE.genes, upstream = 2000)
rtracklayer::export(KO_cold_hits.prom, "/Volumes/projects_secondary/bbc/research/WUN_20181105_RNA/KO_cold_hits_promoter2kb.bed")
save(KO_cold_hits.prom, KO_rt_hits.prom, KO_coldvsKO_rt_hits.prom, WT_coldvsWT_rt_hits.prom, "/Volumes/projects_secondary/bbc/research/WUN_20181105_RNA/DGE_promoters_2kb.rda")
save(KO_cold_hits.prom, KO_rt_hits.prom, KO_coldvsKO_rt_hits.prom, WT_coldvsWT_rt_hits.prom, file = "/Volumes/projects_secondary/bbc/research/WUN_20181105_RNA/DGE_promoters_2kb.rda")
load("/Volumes/projects_secondary/bbc/research/WUN_20181105_RNA/DGE_promoters_2kb.rda")
knitr::opts_chunk$set(echo = TRUE)
rtracklayer::export(KO_cold_hits.prom, "/Volumes/projects_secondary/bbc/research/WUN_20181105_RNA/KO_cold_hits_promoter2kb.bed")
rtracklayer::export(KO_rt_hits.prom, "/Volumes/projects_secondary/bbc/research/WUN_20181105_RNA/KO_rt_hits_promoter2kb.bed")
rtracklayer::export(KO_coldvsKO_rt_hits.prom, "/Volumes/projects_secondary/bbc/research/WUN_20181105_RNA/KO_coldvsKO_rt_hits_promoter2kb.bed")
rtracklayer::export(WT_coldvsWT_rt_hits.prom, "/Volumes/projects_secondary/bbc/research/WUN_20181105_RNA/WT_coldvsWT_rt_hits_promoter2kb.bed")
com_mut_bp <- read.delim("/Volumes/projects_secondary/bbc/research/WUN_20181105_RNA/analysis/enrichment/Reactome/KO_cold/analysis.txt", skip = 11, sep = "\t", header = T)
com_mut_bp <- com_mut_bp[,c(1,6,7)]
colnames(com_mut_bp) <- c("Description", "Fold", "PValue")
com_mut_bp <- subset(com_mut_bp, Description != "Unclassified (UNCLASSIFIED)")
com_mut_bp <- subset(com_mut_bp, Description != "NA")
com_mut_bp$Description <- gsub("\\(.*", "", com_mut_bp$Description)
com_mut_bp$Description <- factor(com_mut_bp$Description, levels = com_mut_bp[order(com_mut_bp$PValue), "Description"])
View(com_mut_bp)
com_mut_bp <- subset(com_mut_bp, !duplicated(com_mut_bp$Description))
com_mut_bp$Description <- factor(com_mut_bp$Description, levels = com_mut_bp[order(com_mut_bp$PValue), "Description"])
View(com_mut_bp)
p4 <- ggplot(data = com_mut_bp[1:25,], aes(x = factor(Description, levels = rev(sort(Description))), y = -log10(PValue))) +
geom_bar(stat = "identity", fill = "darkgray") +
geom_hline(yintercept = -log10(0.05), colour = "#d53b00", linetype = 2) +
coord_flip(expand = T) +
theme_classic(12) +
#theme_opt +
scale_colour_gradient() +
ggtitle("Reactome") +
theme(
axis.title.y = element_blank(),
axis.text.y = element_text(size = 14),
axis.title.x = element_text(size = 14),
axis.text.x = element_text(size = 14),
plot.title = element_text(size = 20)
)
library(ggplot2)
p4 <- ggplot(data = com_mut_bp[1:25,], aes(x = factor(Description, levels = rev(sort(Description))), y = -log10(PValue))) +
geom_bar(stat = "identity", fill = "darkgray") +
geom_hline(yintercept = -log10(0.05), colour = "#d53b00", linetype = 2) +
coord_flip(expand = T) +
theme_classic(12) +
#theme_opt +
scale_colour_gradient() +
ggtitle("Reactome") +
theme(
axis.title.y = element_blank(),
axis.text.y = element_text(size = 14),
axis.title.x = element_text(size = 14),
axis.text.x = element_text(size = 14),
plot.title = element_text(size = 20)
)
p4
out_plot <- plot_grid(p4, labels = "AUTO", ncol = 1, nrow = 1, align = "hv")
library(cowplot)
out_plot <- plot_grid(p4, labels = "AUTO", ncol = 1, nrow = 1, align = "hv")
save_plot("/Volumes/projects_secondary/bbc/research/WUN_20181105_RNA/analysis/enrichment/Reactome/KO_cold/KO_cold_pathway_analysis.pdf", out_plot,
ncol = 1,
nrow = 1,
base_aspect_ratio = 5,
base_height = 5,
base_width = 10 # make room for figure legend
)
save_plot("/Volumes/projects_secondary/bbc/research/WUN_20181105_RNA/analysis/enrichment/Reactome/KO_cold/KO_cold_pathway_analysis.pdf", out_plot,
ncol = 1,
nrow = 1,
base_aspect_ratio = 5,
base_height = 7,
base_width = 10 # make room for figure legend
)
com_mut_bp <- read.delim("/Volumes/projects_secondary/bbc/research/WUN_20181105_RNA/analysis/enrichment/Reactome/KO_rt/analysis.txt", skip = 11, sep = "\t", header = T)
com_mut_bp <- read.delim("/Volumes/projects_secondary/bbc/research/WUN_20181105_RNA/analysis/enrichment/Reactome/KO_rt/analysis_nominalP.txt", skip = 11, sep = "\t", header = T)
com_mut_bp <- com_mut_bp[,c(1,6,7)]
colnames(com_mut_bp) <- c("Description", "Fold", "PValue")
com_mut_bp <- subset(com_mut_bp, Description != "Unclassified (UNCLASSIFIED)")
com_mut_bp <- subset(com_mut_bp, Description != "NA")
com_mut_bp$Description <- gsub("\\(.*", "", com_mut_bp$Description)
com_mut_bp <- subset(com_mut_bp, !duplicated(com_mut_bp$Description))
com_mut_bp$Description <- factor(com_mut_bp$Description, levels = com_mut_bp[order(com_mut_bp$PValue), "Description"])
p4 <- ggplot(data = com_mut_bp[1:25,], aes(x = factor(Description, levels = rev(sort(Description))), y = -log10(PValue))) +
geom_bar(stat = "identity", fill = "darkgray") +
geom_hline(yintercept = -log10(0.05), colour = "#d53b00", linetype = 2) +
coord_flip(expand = T) +
theme_classic(12) +
scale_colour_gradient() +
ggtitle("Reactome") +
theme(
axis.title.y = element_blank(),
axis.text.y = element_text(size = 14),
axis.title.x = element_text(size = 14),
axis.text.x = element_text(size = 14),
plot.title = element_text(size = 20)
)
p4
out_plot <- plot_grid(p4, labels = "AUTO", ncol = 1, nrow = 1, align = "hv")
save_plot("/Volumes/projects_secondary/bbc/research/WUN_20181105_RNA/analysis/enrichment/Reactome/KO_rt/KO_rt_pathway_analysis_nominalPvalue.pdf", out_plot,
ncol = 1,
nrow = 1,
base_aspect_ratio = 5,
base_height = 7,
base_width = 10 # make room for figure legend
)
com_mut_bp <- read.delim("/Volumes/projects_secondary/bbc/research/WUN_20181105_RNA/analysis/enrichment/Reactome/KO_cold_vs_KO_rt/analysis.txt", skip = 11, sep = "\t", header = T)
com_mut_bp <- com_mut_bp[,c(1,6,7)]
colnames(com_mut_bp) <- c("Description", "Fold", "PValue")
com_mut_bp <- subset(com_mut_bp, Description != "Unclassified (UNCLASSIFIED)")
com_mut_bp <- subset(com_mut_bp, Description != "NA")
com_mut_bp$Description <- gsub("\\(.*", "", com_mut_bp$Description)
com_mut_bp <- subset(com_mut_bp, !duplicated(com_mut_bp$Description))
com_mut_bp$Description <- factor(com_mut_bp$Description, levels = com_mut_bp[order(com_mut_bp$PValue), "Description"])
p4 <- ggplot(data = com_mut_bp[1:25,], aes(x = factor(Description, levels = rev(sort(Description))), y = -log10(PValue))) +
geom_bar(stat = "identity", fill = "darkgray") +
geom_hline(yintercept = -log10(0.05), colour = "#d53b00", linetype = 2) +
coord_flip(expand = T) +
theme_classic(12) +
scale_colour_gradient() +
ggtitle("Reactome") +
theme(
axis.title.y = element_blank(),
axis.text.y = element_text(size = 14),
axis.title.x = element_text(size = 14),
axis.text.x = element_text(size = 14),
plot.title = element_text(size = 20)
)
p4
save_plot("/Volumes/projects_secondary/bbc/research/WUN_20181105_RNA/analysis/enrichment/Reactome/KO_cold_vs_KO_rt/KO_cold_vs_KO_rt_pathway_analysis.pdf", out_plot,
ncol = 1,
nrow = 1,
base_aspect_ratio = 5,
base_height = 7,
base_width = 10 # make room for figure legend
)
com_mut_bp <- read.delim("/Volumes/projects_secondary/bbc/research/WUN_20181105_RNA/analysis/enrichment/Reactome/WT_cold_vs_WT_rt/analysis.txt", skip = 11, sep = "\t", header = T)
com_mut_bp <- com_mut_bp[,c(1,6,7)]
colnames(com_mut_bp) <- c("Description", "Fold", "PValue")
com_mut_bp <- subset(com_mut_bp, Description != "Unclassified (UNCLASSIFIED)")
com_mut_bp <- subset(com_mut_bp, Description != "NA")
com_mut_bp$Description <- gsub("\\(.*", "", com_mut_bp$Description)
com_mut_bp <- subset(com_mut_bp, !duplicated(com_mut_bp$Description))
com_mut_bp$Description <- factor(com_mut_bp$Description, levels = com_mut_bp[order(com_mut_bp$PValue), "Description"])
p4 <- ggplot(data = com_mut_bp[1:25,], aes(x = factor(Description, levels = rev(sort(Description))), y = -log10(PValue))) +
geom_bar(stat = "identity", fill = "darkgray") +
geom_hline(yintercept = -log10(0.05), colour = "#d53b00", linetype = 2) +
coord_flip(expand = T) +
theme_classic(12) +
scale_colour_gradient() +
ggtitle("Reactome") +
theme(
axis.title.y = element_blank(),
axis.text.y = element_text(size = 14),
axis.title.x = element_text(size = 14),
axis.text.x = element_text(size = 14),
plot.title = element_text(size = 20)
)
out_plot <- plot_grid(p4, labels = "AUTO", ncol = 1, nrow = 1, align = "hv")
save_plot("/Volumes/projects_secondary/bbc/research/WUN_20181105_RNA/analysis/enrichment/Reactome/WT_cold_vs_WT_rt/WT_cold_vs_WT_rt_pathway_analysis.pdf", out_plot,
ncol = 1,
nrow = 1,
base_aspect_ratio = 5,
base_height = 7,
base_width = 10 # make room for figure legend
)
knitr::opts_chunk$set(echo = TRUE)
dx <- read.delim("/Volumes/projects_secondary/bbc/research/TRIT_20180728_EXOME/rawdata/mskcc_wex/diagnosis_samples.txt",
header = F,
stringsAsFactors = F,
check.names = F)
rel <- read.delim("/Volumes/projects_secondary/bbc/research/TRIT_20180728_EXOME/rawdata/mskcc_wex/relapse_samples.txt",
header = F,
stringsAsFactors = F,
check.names = F)
germ <- read.delim("/Volumes/projects_secondary/bbc/research/TRIT_20180728_EXOME/rawdata/mskcc_wex/germline_samples.txt",
header = F,
stringsAsFactors = F,
check.names = F)
View(dx)
dx <- dx[,c(8,12,17,20,22)]
head(dx, 1L)
colnames(dx) <- c("Sample_ID", "SRR_ID", "Site", "Sex", "Trio_ID")
rel <- rel[,c(8,12,17,20,22)]
colnames(rel) <- c("Sample_ID", "SRR_ID", "Site", "Sex", "Trio_ID")
germ <- germ[,c(8,12,17,20,22)]
colnames(germ) <- c("Sample_ID", "SRR_ID", "Site", "Sex", "Trio_ID")
View(germ)
View(dx)
dx$Trio_ID == rel$Trio_ID
dx$Trio_ID == germ$Trio_ID
dx$Bams <- paste0(dx$SRR_ID, ".bam")
rel$Bams <- paste0(rel$SRR_ID, ".bam")
germ$Bams <- paste0(germ$SRR_ID, ".bam")
View(germ)
write.table(dx, "/Volumes/projects_secondary/bbc/research/TRIT_20180728_EXOME/analysis/mskcc_wex/metadata/diagnosis_metadata.txt",
quote = F,
col.names = F,
row.names = F,
sep = '\t')
write.table(rel, "/Volumes/projects_secondary/bbc/research/TRIT_20180728_EXOME/analysis/mskcc_wex/metadata/relapse_metadata.txt",
quote = F,
col.names = F,
row.names = F,
sep = '\t')
write.table(germ, "/Volumes/projects_secondary/bbc/research/TRIT_20180728_EXOME/analysis/mskcc_wex/metadata/germline_metadata.txt",
quote = F,
col.names = F,
row.names = F,
sep = '\t')
dx <- read.delim("/Volumes/projects_secondary/bbc/research/TRIT_20180728_EXOME/rawdata/mskcc_wex/diagnosis_samples.txt",
header = F,
stringsAsFactors = F,
check.names = F)
View(dx)
BiocManager::install("jlmelville/uwot")
