% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getABSignal.R
\name{getABSignal}
\alias{getABSignal}
\title{Calculate Pearson correlations of smoothed eigenvectors}
\usage{
getABSignal(x, squeeze = FALSE, assay = c("array", "atac", "bisulfite"))
}
\arguments{
\item{x}{A list object from getCorMatrix}

\item{squeeze}{Whether squeezing was used (implies Fisher's Z transformation)}

\item{assay}{What kind of assay are we working on ("array", "atac", "bisulfite")}
}
\value{
A list x to pass to getABSignal
}
\description{
This function is used to generate a list x to be passed to getABSignal
}
\examples{

library(SummarizedExperiment)
library(Homo.sapiens)
library(BiocSingular)

#Generate random genomic intervals of 1-1000 bp on chr1-22
#Modified from https://www.biostars.org/p/225520/
random_genomic_int <- data.frame(chr = rep("chr14", 100))
random_genomic_int$start <- apply(random_genomic_int, 1, function(x) { round(runif(1, 0, getSeqLengths(chr = x)[[1]]), 0) })
random_genomic_int$end <- random_genomic_int$start + runif(1, 1, 1000)
random_genomic_int$strand <- "*"

#Generate random counts
counts <- rnbinom(1000, 1.2, 0.4)

#Build random counts for 10 samples
count.mat <- matrix(sample(counts, nrow(random_genomic_int) * 10, replace = FALSE), ncol = 10)
colnames(count.mat) <- paste0("sample_", seq(1:10))

#Bin counts
bin.counts <- getBinMatrix(count.mat, makeGRangesFromDataFrame(random_genomic_int), chr = "chr14", genome = "hg19")

#Calculate correlations
bin.cor.counts <- getCorMatrix(bin.counts)

#Get A/B signal
absignal <- getABSignal(bin.cor.counts)
}
